<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="mybatis-hazelcast"><sessioninfo id="BitfenixGhost-5ecb2922" start="1444276573114" dump="1444276610989"/><sessioninfo id="BitfenixGhost-44f51780" start="1444276627755" dump="1444276664461"/><sessioninfo id="BitfenixGhost-e5330e0a" start="1444277188182" dump="1444277225738"/><sessioninfo id="BitfenixGhost-f1240ba6" start="1444277805264" dump="1444277843550"/><sessioninfo id="BitfenixGhost-c4a6cc4b" start="1444277969224" dump="1444278007405"/><sessioninfo id="BitfenixGhost-38f6732" start="1444278177779" dump="1444278215996"/><sessioninfo id="BitfenixGhost-6f662c44" start="1444278307655" dump="1444278344077"/><sessioninfo id="BitfenixGhost-13c0a63" start="1444279025849" dump="1444279062409"/><sessioninfo id="BitfenixGhost-ad129acc" start="1444279550174" dump="1444279591179"/><sessioninfo id="BitfenixGhost-b92a25c0" start="1444279733536" dump="1444279770560"/><sessioninfo id="BitfenixGhost-b5d5e0d5" start="1444279833370" dump="1444279871110"/><package name="org/mybatis/caches/hazelcast"><class name="org/mybatis/caches/hazelcast/LoggingHazelcastClientCache"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/mybatis/caches/hazelcast/DummyReadWriteLock"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLock" desc="()Ljava/util/concurrent/locks/Lock;" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLock" desc="()Ljava/util/concurrent/locks/Lock;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/mybatis/caches/hazelcast/LoggingHazelcastCache"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/mybatis/caches/hazelcast/AbstractHazelcastCache"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="31"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReadWriteLock" desc="()Ljava/util/concurrent/locks/ReadWriteLock;" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putObject" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="99"><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeObject" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="122"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="46"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/mybatis/caches/hazelcast/HazelcastClientCache"><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/mybatis/caches/hazelcast/HazelcastCache"><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/mybatis/caches/hazelcast/DummyReadWriteLock$DummyLock"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()V" line="60"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lockInterruptibly" desc="()V" line="68"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryLock" desc="()Z" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryLock" desc="(JLjava/util/concurrent/TimeUnit;)Z" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unlock" desc="()V" line="92"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newCondition" desc="()Ljava/util/concurrent/locks/Condition;" line="99"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="3"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HazelcastCache.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DummyReadWriteLock.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="11"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="8" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LoggingHazelcastCache.java"><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HazelcastClientCache.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoggingHazelcastClientCache.java"><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractHazelcastCache.java"><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="1" cb="1"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="1" cb="1"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="1" cb="1"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="46"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="93" covered="77"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="28" covered="25"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="15" covered="12"/><counter type="CLASS" missed="2" covered="5"/></package><counter type="INSTRUCTION" missed="93" covered="77"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="28" covered="25"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="15" covered="12"/><counter type="CLASS" missed="2" covered="5"/></report>